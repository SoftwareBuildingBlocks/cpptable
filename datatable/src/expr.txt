============================================================
GOLD Parser Builder
Version 5.2.0.
============================================================


========================================
Grammar
========================================

"Start Symbol" = <Expression>

! =============================================================================
! Terminals
! =============================================================================

{String Ch 1}      = {Printable} - ["]
{String Ch 2}      = {Printable} - ['']
{Id Ch Standard}   = {Alphanumeric} + [_]
{Id Ch Extended}   = {Printable} - ['['] - [']']

StringLiteral   = '"'{String Ch 1}*'"' | ''{String Ch 2}*''
IntegerLiteral  = {Digit}+
RealLiteral     = {Digit}+'.'{Digit}+
BoolLiteral     = TRUE|FALSE

!----- Identifiers in SQL are very complex. 

Id             = ({Letter}{Id Ch Standard}* | '['{Id Ch Extended}+']')  ('.'({Letter}{Id Ch Standard}* | '['{Id Ch Extended}+']'))?

<Expression>  ::= <And Exp> OR <Expression>
                | <And Exp>

<And Exp>     ::= <Not Exp> AND <And Exp>
                | <Not Exp>

<Not Exp>     ::= NOT <Pred Exp>
                | <Pred Exp>

<Pred Exp>    ::= <Value> IS NOT NULL
                | <Value> IS NULL
                | <Add Exp> LIKE StringLiteral
                | <Add Exp> IN   <Tuple>
                | <Add Exp> '='  <Add Exp>
                | <Add Exp> '<>' <Add Exp>
                | <Add Exp> '!=' <Add Exp>
                | <Add Exp> '>'  <Add Exp>
                | <Add Exp> '>=' <Add Exp>
                | <Add Exp> '<'  <Add Exp>
                | <Add Exp> '<=' <Add Exp>
                | <Add Exp>

<Add Exp>     ::= <Add Exp> '+' <Mult Exp>
                | <Add Exp> '-' <Mult Exp>
                | <Mult Exp>

<Mult Exp>    ::= <Mult Exp> '*' <Negate Exp> 
                | <Mult Exp> '/' <Negate Exp>
                | <Negate Exp>

<Negate Exp>  ::= '-' <Value>
                | <Value>
        
<Value>       ::= <Tuple>
                | ID
                | IntegerLiteral
                | RealLiteral
                | StringLiteral
                | BoolLiteral
                | NULL

<Tuple>       ::= '(' <Expr List> ')'

<Expr List>  ::= <Expression> ',' <Expr List>
               | <Expression>





========================================
Grammar Properties
========================================

Start Symbol        Expression
Name                (Untitled)
Author              (Unknown)
Version             (Not Specified)
Auto Whitespace     True
Case Sensitive      False
Character Mapping   Windows-1252
Character Set       Unicode
Generated By        GOLD Parser Builder 5.2.0.
Generated Date      2015-11-13 21:57
About               


========================================
Defined Sets
========================================

{String Ch 1}        {Space}!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
{String Ch 2}        {Space}!"#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
{Id Ch Standard}     0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
{Id Ch Extended}     {Space}!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}


========================================
Lexical Groups
========================================





========================================
Terminals
========================================

 0      (EOF)
 1      (Error)
 2      Whitespace
 3      '-'
 4      '!='
 5      '('
 6      ')'
 7      '*'
 8      ','
 9      '/'
 10     '+'
 11     '<'
 12     '<='
 13     '<>'
 14     '='
 15     '>'
 16     '>='
 17     AND
 18     BoolLiteral
 19     Id
 20     IN
 21     IntegerLiteral
 22     IS
 23     LIKE
 24     NOT
 25     NULL
 26     OR
 27     RealLiteral
 28     StringLiteral


========================================
Nonterminals
========================================

29      <Add Exp>
30      <And Exp>
31      <Expr List>
32      <Expression>
33      <Mult Exp>
34      <Negate Exp>
35      <Not Exp>
36      <Pred Exp>
37      <Tuple>
38      <Value>


========================================
Rules
========================================

0       <Expression> ::= <And Exp> OR <Expression>
1       <Expression> ::= <And Exp>
2       <And Exp> ::= <Not Exp> AND <And Exp>
3       <And Exp> ::= <Not Exp>
4       <Not Exp> ::= NOT <Pred Exp>
5       <Not Exp> ::= <Pred Exp>
6       <Pred Exp> ::= <Value> IS NOT NULL
7       <Pred Exp> ::= <Value> IS NULL
8       <Pred Exp> ::= <Add Exp> LIKE StringLiteral
9       <Pred Exp> ::= <Add Exp> IN <Tuple>
10      <Pred Exp> ::= <Add Exp> '=' <Add Exp>
11      <Pred Exp> ::= <Add Exp> '<>' <Add Exp>
12      <Pred Exp> ::= <Add Exp> '!=' <Add Exp>
13      <Pred Exp> ::= <Add Exp> '>' <Add Exp>
14      <Pred Exp> ::= <Add Exp> '>=' <Add Exp>
15      <Pred Exp> ::= <Add Exp> '<' <Add Exp>
16      <Pred Exp> ::= <Add Exp> '<=' <Add Exp>
17      <Pred Exp> ::= <Add Exp>
18      <Add Exp> ::= <Add Exp> '+' <Mult Exp>
19      <Add Exp> ::= <Add Exp> '-' <Mult Exp>
20      <Add Exp> ::= <Mult Exp>
21      <Mult Exp> ::= <Mult Exp> '*' <Negate Exp>
22      <Mult Exp> ::= <Mult Exp> '/' <Negate Exp>
23      <Mult Exp> ::= <Negate Exp>
24      <Negate Exp> ::= '-' <Value>
25      <Negate Exp> ::= <Value>
26      <Value> ::= <Tuple>
27      <Value> ::= Id
28      <Value> ::= IntegerLiteral
29      <Value> ::= RealLiteral
30      <Value> ::= StringLiteral
31      <Value> ::= BoolLiteral
32      <Value> ::= NULL
33      <Tuple> ::= '(' <Expr List> ')'
34      <Expr List> ::= <Expression> ',' <Expr List>
35      <Expr List> ::= <Expression>


========================================
DFA States
========================================

State 0	
        Goto 1       &09 .. &0D, &20, &85, &A0, &1680, &180E, &2000 .. &200A, &2026, &2028, &2029, &202F, &205F, &3000
        Goto 2       -
        Goto 3       !
        Goto 5       (
        Goto 6       )
        Goto 7       *
        Goto 8       ,
        Goto 9       /
        Goto 10      +
        Goto 11      =
        Goto 12      BCDEGHJKMPQRSUVWXYZbcdeghjkmpqrsuvwxyz
        Goto 20      [
        Goto 23      "
        Goto 26      '
        Goto 29      0123456789
        Goto 32      <
        Goto 35      >
        Goto 37      Aa
        Goto 40      Ff
        Goto 45      Ii
        Goto 48      Ll
        Goto 52      Nn
        Goto 58      Oo
        Goto 60      Tt


State 1
        Goto 1       &09 .. &0D, &20, &85, &A0, &1680, &180E, &2000 .. &200A, &2026, &2028, &2029, &202F, &205F, &3000
        Accept Whitespace


State 2
        Accept '-'


State 3
        Goto 4       =


State 4
        Accept '!='


State 5
        Accept '('


State 6
        Accept ')'


State 7
        Accept '*'


State 8
        Accept ','


State 9
        Accept '/'


State 10
        Accept '+'


State 11
        Accept '='


State 12
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept Id


State 13
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept Id


State 14
        Goto 15      ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        Goto 17      [


State 15
        Goto 16      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Accept Id


State 16
        Goto 16      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Accept Id


State 17
        Goto 18      {Space}!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}


State 18
        Goto 18      {Space}!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
        Goto 19      ]


State 19
        Accept Id


State 20
        Goto 21      {Space}!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}


State 21
        Goto 21      {Space}!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
        Goto 22      ]


State 22
        Goto 14      .
        Accept Id


State 23
        Goto 24      {Space}!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
        Goto 25      "


State 24
        Goto 24      {Space}!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
        Goto 25      "


State 25
        Accept StringLiteral


State 26
        Goto 27      {Space}!"#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
        Goto 28      '


State 27
        Goto 27      {Space}!"#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~{NBSP}
        Goto 28      '


State 28
        Accept StringLiteral


State 29
        Goto 30      .
        Goto 29      0123456789
        Accept IntegerLiteral


State 30
        Goto 31      0123456789


State 31
        Goto 31      0123456789
        Accept RealLiteral


State 32
        Goto 33      =
        Goto 34      >
        Accept '<'


State 33
        Accept '<='


State 34
        Accept '<>'


State 35
        Goto 36      =
        Accept '>'


State 36
        Accept '>='


State 37
        Goto 13      0123456789ABCDEFGHIJKLMOPQRSTUVWXYZ_abcdefghijklmopqrstuvwxyz
        Goto 14      .
        Goto 38      Nn
        Accept Id


State 38
        Goto 13      0123456789ABCEFGHIJKLMNOPQRSTUVWXYZ_abcefghijklmnopqrstuvwxyz
        Goto 14      .
        Goto 39      Dd
        Accept Id


State 39
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept AND


State 40
        Goto 13      0123456789BCDEFGHIJKLMNOPQRSTUVWXYZ_bcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Goto 41      Aa
        Accept Id


State 41
        Goto 13      0123456789ABCDEFGHIJKMNOPQRSTUVWXYZ_abcdefghijkmnopqrstuvwxyz
        Goto 14      .
        Goto 42      Ll
        Accept Id


State 42
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRTUVWXYZ_abcdefghijklmnopqrtuvwxyz
        Goto 14      .
        Goto 43      Ss
        Accept Id


State 43
        Goto 13      0123456789ABCDFGHIJKLMNOPQRSTUVWXYZ_abcdfghijklmnopqrstuvwxyz
        Goto 14      .
        Goto 44      Ee
        Accept Id


State 44
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept BoolLiteral


State 45
        Goto 13      0123456789ABCDEFGHIJKLMOPQRTUVWXYZ_abcdefghijklmopqrtuvwxyz
        Goto 14      .
        Goto 46      Nn
        Goto 47      Ss
        Accept Id


State 46
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept IN


State 47
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept IS


State 48
        Goto 13      0123456789ABCDEFGHJKLMNOPQRSTUVWXYZ_abcdefghjklmnopqrstuvwxyz
        Goto 14      .
        Goto 49      Ii
        Accept Id


State 49
        Goto 13      0123456789ABCDEFGHIJLMNOPQRSTUVWXYZ_abcdefghijlmnopqrstuvwxyz
        Goto 14      .
        Goto 50      Kk
        Accept Id


State 50
        Goto 13      0123456789ABCDFGHIJKLMNOPQRSTUVWXYZ_abcdfghijklmnopqrstuvwxyz
        Goto 14      .
        Goto 51      Ee
        Accept Id


State 51
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept LIKE


State 52
        Goto 13      0123456789ABCDEFGHIJKLMNPQRSTVWXYZ_abcdefghijklmnpqrstvwxyz
        Goto 14      .
        Goto 53      Oo
        Goto 55      Uu
        Accept Id


State 53
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSUVWXYZ_abcdefghijklmnopqrsuvwxyz
        Goto 14      .
        Goto 54      Tt
        Accept Id


State 54
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept NOT


State 55
        Goto 13      0123456789ABCDEFGHIJKMNOPQRSTUVWXYZ_abcdefghijkmnopqrstuvwxyz
        Goto 14      .
        Goto 56      Ll
        Accept Id


State 56
        Goto 13      0123456789ABCDEFGHIJKMNOPQRSTUVWXYZ_abcdefghijkmnopqrstuvwxyz
        Goto 14      .
        Goto 57      Ll
        Accept Id


State 57
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept NULL


State 58
        Goto 13      0123456789ABCDEFGHIJKLMNOPQSTUVWXYZ_abcdefghijklmnopqstuvwxyz
        Goto 14      .
        Goto 59      Rr
        Accept Id


State 59
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept OR


State 60
        Goto 13      0123456789ABCDEFGHIJKLMNOPQSTUVWXYZ_abcdefghijklmnopqstuvwxyz
        Goto 14      .
        Goto 61      Rr
        Accept Id


State 61
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTVWXYZ_abcdefghijklmnopqrstvwxyz
        Goto 14      .
        Goto 62      Uu
        Accept Id


State 62
        Goto 13      0123456789ABCDFGHIJKLMNOPQRSTUVWXYZ_abcdfghijklmnopqrstuvwxyz
        Goto 14      .
        Goto 63      Ee
        Accept Id


State 63
        Goto 13      0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
        Goto 14      .
        Accept BoolLiteral




========================================
LALR States
========================================

State 0
        <S'> ::= _ <Expression> (EOF)                         <S'> ::= ^ <Expression> (EOF)
        <Expression> ::= _ <And Exp> OR <Expression>          <Expression> ::= ^ <And Exp> OR <Expression>
        <Expression> ::= _ <And Exp>                          <Expression> ::= ^ <And Exp>
        <And Exp> ::= _ <Not Exp> AND <And Exp>               <And Exp> ::= ^ <Not Exp> AND <And Exp>
        <And Exp> ::= _ <Not Exp>                             <And Exp> ::= ^ <Not Exp>
        <Not Exp> ::= _ NOT <Pred Exp>                        <Not Exp> ::= ^ NOT <Pred Exp>
        <Not Exp> ::= _ <Pred Exp>                            <Not Exp> ::= ^ <Pred Exp>
        <Pred Exp> ::= _ <Value> IS NOT NULL                  <Pred Exp> ::= ^ <Value> IS NOT NULL
        <Pred Exp> ::= _ <Value> IS NULL                      <Pred Exp> ::= ^ <Value> IS NULL
        <Pred Exp> ::= _ <Add Exp> LIKE StringLiteral         <Pred Exp> ::= ^ <Add Exp> LIKE StringLiteral
        <Pred Exp> ::= _ <Add Exp> IN <Tuple>                 <Pred Exp> ::= ^ <Add Exp> IN <Tuple>
        <Pred Exp> ::= _ <Add Exp> '=' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<>' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '!=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '!=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '>=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '<' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp>                            <Pred Exp> ::= ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NOT s 6
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 10
        <And Exp> g 11
        <Expression> g 12
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Not Exp> g 15
        <Pred Exp> g 16
        <Tuple> g 17
        <Value> g 18


State 1
        Prior States: 0, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Negate Exp> ::= '-' _ <Value>                        <Negate Exp> ::= '-' ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Tuple> g 17
        <Value> g 19


State 2
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40

        <Tuple> ::= '(' _ <Expr List> ')'                     <Tuple> ::= '(' ^ <Expr List> ')'
        <Expression> ::= _ <And Exp> OR <Expression>          <Expression> ::= ^ <And Exp> OR <Expression>
        <Expression> ::= _ <And Exp>                          <Expression> ::= ^ <And Exp>
        <And Exp> ::= _ <Not Exp> AND <And Exp>               <And Exp> ::= ^ <Not Exp> AND <And Exp>
        <And Exp> ::= _ <Not Exp>                             <And Exp> ::= ^ <Not Exp>
        <Not Exp> ::= _ NOT <Pred Exp>                        <Not Exp> ::= ^ NOT <Pred Exp>
        <Not Exp> ::= _ <Pred Exp>                            <Not Exp> ::= ^ <Pred Exp>
        <Pred Exp> ::= _ <Value> IS NOT NULL                  <Pred Exp> ::= ^ <Value> IS NOT NULL
        <Pred Exp> ::= _ <Value> IS NULL                      <Pred Exp> ::= ^ <Value> IS NULL
        <Pred Exp> ::= _ <Add Exp> LIKE StringLiteral         <Pred Exp> ::= ^ <Add Exp> LIKE StringLiteral
        <Pred Exp> ::= _ <Add Exp> IN <Tuple>                 <Pred Exp> ::= ^ <Add Exp> IN <Tuple>
        <Pred Exp> ::= _ <Add Exp> '=' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<>' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '!=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '!=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '>=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '<' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp>                            <Pred Exp> ::= ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'
        <Expr List> ::= _ <Expression> ',' <Expr List>        <Expr List> ::= ^ <Expression> ',' <Expr List>
        <Expr List> ::= _ <Expression>                        <Expr List> ::= ^ <Expression>

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NOT s 6
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 10
        <And Exp> g 11
        <Expr List> g 20
        <Expression> g 21
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Not Exp> g 15
        <Pred Exp> g 16
        <Tuple> g 17
        <Value> g 18


State 3
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Value> ::= BoolLiteral _                             <Value> ::= BoolLiteral ^

        (EOF) r 31
        '-' r 31
        '!=' r 31
        ')' r 31
        '*' r 31
        ',' r 31
        '/' r 31
        '+' r 31
        '<' r 31
        '<=' r 31
        '<>' r 31
        '=' r 31
        '>' r 31
        '>=' r 31
        AND r 31
        IN r 31
        IS r 31
        LIKE r 31
        OR r 31


State 4
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Value> ::= Id _                                      <Value> ::= Id ^

        (EOF) r 27
        '-' r 27
        '!=' r 27
        ')' r 27
        '*' r 27
        ',' r 27
        '/' r 27
        '+' r 27
        '<' r 27
        '<=' r 27
        '<>' r 27
        '=' r 27
        '>' r 27
        '>=' r 27
        AND r 27
        IN r 27
        IS r 27
        LIKE r 27
        OR r 27


State 5
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Value> ::= IntegerLiteral _                          <Value> ::= IntegerLiteral ^

        (EOF) r 28
        '-' r 28
        '!=' r 28
        ')' r 28
        '*' r 28
        ',' r 28
        '/' r 28
        '+' r 28
        '<' r 28
        '<=' r 28
        '<>' r 28
        '=' r 28
        '>' r 28
        '>=' r 28
        AND r 28
        IN r 28
        IS r 28
        LIKE r 28
        OR r 28


State 6
        Prior States: 0, 2, 34, 37, 40

        <Not Exp> ::= NOT _ <Pred Exp>                        <Not Exp> ::= NOT ^ <Pred Exp>
        <Pred Exp> ::= _ <Value> IS NOT NULL                  <Pred Exp> ::= ^ <Value> IS NOT NULL
        <Pred Exp> ::= _ <Value> IS NULL                      <Pred Exp> ::= ^ <Value> IS NULL
        <Pred Exp> ::= _ <Add Exp> LIKE StringLiteral         <Pred Exp> ::= ^ <Add Exp> LIKE StringLiteral
        <Pred Exp> ::= _ <Add Exp> IN <Tuple>                 <Pred Exp> ::= ^ <Add Exp> IN <Tuple>
        <Pred Exp> ::= _ <Add Exp> '=' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<>' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '!=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '!=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '>=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '<' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp>                            <Pred Exp> ::= ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 10
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Pred Exp> g 22
        <Tuple> g 17
        <Value> g 18


State 7
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Value> ::= NULL _                                    <Value> ::= NULL ^

        (EOF) r 32
        '-' r 32
        '!=' r 32
        ')' r 32
        '*' r 32
        ',' r 32
        '/' r 32
        '+' r 32
        '<' r 32
        '<=' r 32
        '<>' r 32
        '=' r 32
        '>' r 32
        '>=' r 32
        AND r 32
        IN r 32
        IS r 32
        LIKE r 32
        OR r 32


State 8
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Value> ::= RealLiteral _                             <Value> ::= RealLiteral ^

        (EOF) r 29
        '-' r 29
        '!=' r 29
        ')' r 29
        '*' r 29
        ',' r 29
        '/' r 29
        '+' r 29
        '<' r 29
        '<=' r 29
        '<>' r 29
        '=' r 29
        '>' r 29
        '>=' r 29
        AND r 29
        IN r 29
        IS r 29
        LIKE r 29
        OR r 29


State 9
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Value> ::= StringLiteral _                           <Value> ::= StringLiteral ^

        (EOF) r 30
        '-' r 30
        '!=' r 30
        ')' r 30
        '*' r 30
        ',' r 30
        '/' r 30
        '+' r 30
        '<' r 30
        '<=' r 30
        '<>' r 30
        '=' r 30
        '>' r 30
        '>=' r 30
        AND r 30
        IN r 30
        IS r 30
        LIKE r 30
        OR r 30


State 10
        Prior States: 0, 2, 6, 34, 37, 40

        <Pred Exp> ::= <Add Exp> _ LIKE StringLiteral         <Pred Exp> ::= <Add Exp> ^ LIKE StringLiteral
        <Pred Exp> ::= <Add Exp> _ IN <Tuple>                 <Pred Exp> ::= <Add Exp> ^ IN <Tuple>
        <Pred Exp> ::= <Add Exp> _ '=' <Add Exp>              <Pred Exp> ::= <Add Exp> ^ '=' <Add Exp>
        <Pred Exp> ::= <Add Exp> _ '<>' <Add Exp>             <Pred Exp> ::= <Add Exp> ^ '<>' <Add Exp>
        <Pred Exp> ::= <Add Exp> _ '!=' <Add Exp>             <Pred Exp> ::= <Add Exp> ^ '!=' <Add Exp>
        <Pred Exp> ::= <Add Exp> _ '>' <Add Exp>              <Pred Exp> ::= <Add Exp> ^ '>' <Add Exp>
        <Pred Exp> ::= <Add Exp> _ '>=' <Add Exp>             <Pred Exp> ::= <Add Exp> ^ '>=' <Add Exp>
        <Pred Exp> ::= <Add Exp> _ '<' <Add Exp>              <Pred Exp> ::= <Add Exp> ^ '<' <Add Exp>
        <Pred Exp> ::= <Add Exp> _ '<=' <Add Exp>             <Pred Exp> ::= <Add Exp> ^ '<=' <Add Exp>
        <Pred Exp> ::= <Add Exp> _                            <Pred Exp> ::= <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '!=' s 24
        '+' s 25
        '<' s 26
        '<=' s 27
        '<>' s 28
        '=' s 29
        '>' s 30
        '>=' s 31
        IN s 32
        LIKE s 33
        (EOF) r 17
        ')' r 17
        ',' r 17
        AND r 17
        OR r 17


State 11
        Prior States: 0, 2, 34, 40

        <Expression> ::= <And Exp> _ OR <Expression>          <Expression> ::= <And Exp> ^ OR <Expression>
        <Expression> ::= <And Exp> _                          <Expression> ::= <And Exp> ^

        OR s 34
        (EOF) r 1
        ')' r 1
        ',' r 1


State 12
        Prior States: 0

        <S'> ::= <Expression> _ (EOF)                         <S'> ::= <Expression> ^ (EOF)

        (EOF) a


State 13
        Prior States: 0, 2, 6, 24, 26, 27, 28, 29, 30, 31, 34, 37, 40

        <Add Exp> ::= <Mult Exp> _                            <Add Exp> ::= <Mult Exp> ^
        <Mult Exp> ::= <Mult Exp> _ '*' <Negate Exp>          <Mult Exp> ::= <Mult Exp> ^ '*' <Negate Exp>
        <Mult Exp> ::= <Mult Exp> _ '/' <Negate Exp>          <Mult Exp> ::= <Mult Exp> ^ '/' <Negate Exp>

        '*' s 35
        '/' s 36
        (EOF) r 20
        '-' r 20
        '!=' r 20
        ')' r 20
        ',' r 20
        '+' r 20
        '<' r 20
        '<=' r 20
        '<>' r 20
        '=' r 20
        '>' r 20
        '>=' r 20
        AND r 20
        IN r 20
        LIKE r 20
        OR r 20


State 14
        Prior States: 0, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 40

        <Mult Exp> ::= <Negate Exp> _                         <Mult Exp> ::= <Negate Exp> ^

        (EOF) r 23
        '-' r 23
        '!=' r 23
        ')' r 23
        '*' r 23
        ',' r 23
        '/' r 23
        '+' r 23
        '<' r 23
        '<=' r 23
        '<>' r 23
        '=' r 23
        '>' r 23
        '>=' r 23
        AND r 23
        IN r 23
        LIKE r 23
        OR r 23


State 15
        Prior States: 0, 2, 34, 37, 40

        <And Exp> ::= <Not Exp> _ AND <And Exp>               <And Exp> ::= <Not Exp> ^ AND <And Exp>
        <And Exp> ::= <Not Exp> _                             <And Exp> ::= <Not Exp> ^

        AND s 37
        (EOF) r 3
        ')' r 3
        ',' r 3
        OR r 3


State 16
        Prior States: 0, 2, 34, 37, 40

        <Not Exp> ::= <Pred Exp> _                            <Not Exp> ::= <Pred Exp> ^

        (EOF) r 5
        ')' r 5
        ',' r 5
        AND r 5
        OR r 5


State 17
        Prior States: 0, 1, 2, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40

        <Value> ::= <Tuple> _                                 <Value> ::= <Tuple> ^

        (EOF) r 26
        '-' r 26
        '!=' r 26
        ')' r 26
        '*' r 26
        ',' r 26
        '/' r 26
        '+' r 26
        '<' r 26
        '<=' r 26
        '<>' r 26
        '=' r 26
        '>' r 26
        '>=' r 26
        AND r 26
        IN r 26
        IS r 26
        LIKE r 26
        OR r 26


State 18
        Prior States: 0, 2, 6, 34, 37, 40

        <Pred Exp> ::= <Value> _ IS NOT NULL                  <Pred Exp> ::= <Value> ^ IS NOT NULL
        <Pred Exp> ::= <Value> _ IS NULL                      <Pred Exp> ::= <Value> ^ IS NULL
        <Negate Exp> ::= <Value> _                            <Negate Exp> ::= <Value> ^

        IS s 38
        (EOF) r 25
        '-' r 25
        '!=' r 25
        ')' r 25
        '*' r 25
        ',' r 25
        '/' r 25
        '+' r 25
        '<' r 25
        '<=' r 25
        '<>' r 25
        '=' r 25
        '>' r 25
        '>=' r 25
        AND r 25
        IN r 25
        LIKE r 25
        OR r 25


State 19
        Prior States: 1

        <Negate Exp> ::= '-' <Value> _                        <Negate Exp> ::= '-' <Value> ^

        (EOF) r 24
        '-' r 24
        '!=' r 24
        ')' r 24
        '*' r 24
        ',' r 24
        '/' r 24
        '+' r 24
        '<' r 24
        '<=' r 24
        '<>' r 24
        '=' r 24
        '>' r 24
        '>=' r 24
        AND r 24
        IN r 24
        LIKE r 24
        OR r 24


State 20
        Prior States: 2

        <Tuple> ::= '(' <Expr List> _ ')'                     <Tuple> ::= '(' <Expr List> ^ ')'

        ')' s 39


State 21
        Prior States: 2, 40

        <Expr List> ::= <Expression> _ ',' <Expr List>        <Expr List> ::= <Expression> ^ ',' <Expr List>
        <Expr List> ::= <Expression> _                        <Expr List> ::= <Expression> ^

        ',' s 40
        ')' r 35


State 22
        Prior States: 6

        <Not Exp> ::= NOT <Pred Exp> _                        <Not Exp> ::= NOT <Pred Exp> ^

        (EOF) r 4
        ')' r 4
        ',' r 4
        AND r 4
        OR r 4


State 23
        Prior States: 10, 43, 45, 46, 47, 48, 49, 50

        <Add Exp> ::= <Add Exp> '-' _ <Mult Exp>              <Add Exp> ::= <Add Exp> '-' ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Mult Exp> g 41
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 24
        Prior States: 10

        <Pred Exp> ::= <Add Exp> '!=' _ <Add Exp>             <Pred Exp> ::= <Add Exp> '!=' ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 43
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 25
        Prior States: 10, 43, 45, 46, 47, 48, 49, 50

        <Add Exp> ::= <Add Exp> '+' _ <Mult Exp>              <Add Exp> ::= <Add Exp> '+' ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Mult Exp> g 44
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 26
        Prior States: 10

        <Pred Exp> ::= <Add Exp> '<' _ <Add Exp>              <Pred Exp> ::= <Add Exp> '<' ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 45
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 27
        Prior States: 10

        <Pred Exp> ::= <Add Exp> '<=' _ <Add Exp>             <Pred Exp> ::= <Add Exp> '<=' ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 46
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 28
        Prior States: 10

        <Pred Exp> ::= <Add Exp> '<>' _ <Add Exp>             <Pred Exp> ::= <Add Exp> '<>' ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 47
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 29
        Prior States: 10

        <Pred Exp> ::= <Add Exp> '=' _ <Add Exp>              <Pred Exp> ::= <Add Exp> '=' ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 48
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 30
        Prior States: 10

        <Pred Exp> ::= <Add Exp> '>' _ <Add Exp>              <Pred Exp> ::= <Add Exp> '>' ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 49
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 31
        Prior States: 10

        <Pred Exp> ::= <Add Exp> '>=' _ <Add Exp>             <Pred Exp> ::= <Add Exp> '>=' ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 50
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Tuple> g 17
        <Value> g 42


State 32
        Prior States: 10

        <Pred Exp> ::= <Add Exp> IN _ <Tuple>                 <Pred Exp> ::= <Add Exp> IN ^ <Tuple>
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '(' s 2
        <Tuple> g 51


State 33
        Prior States: 10

        <Pred Exp> ::= <Add Exp> LIKE _ StringLiteral         <Pred Exp> ::= <Add Exp> LIKE ^ StringLiteral

        StringLiteral s 52


State 34
        Prior States: 11

        <Expression> ::= <And Exp> OR _ <Expression>          <Expression> ::= <And Exp> OR ^ <Expression>
        <Expression> ::= _ <And Exp> OR <Expression>          <Expression> ::= ^ <And Exp> OR <Expression>
        <Expression> ::= _ <And Exp>                          <Expression> ::= ^ <And Exp>
        <And Exp> ::= _ <Not Exp> AND <And Exp>               <And Exp> ::= ^ <Not Exp> AND <And Exp>
        <And Exp> ::= _ <Not Exp>                             <And Exp> ::= ^ <Not Exp>
        <Not Exp> ::= _ NOT <Pred Exp>                        <Not Exp> ::= ^ NOT <Pred Exp>
        <Not Exp> ::= _ <Pred Exp>                            <Not Exp> ::= ^ <Pred Exp>
        <Pred Exp> ::= _ <Value> IS NOT NULL                  <Pred Exp> ::= ^ <Value> IS NOT NULL
        <Pred Exp> ::= _ <Value> IS NULL                      <Pred Exp> ::= ^ <Value> IS NULL
        <Pred Exp> ::= _ <Add Exp> LIKE StringLiteral         <Pred Exp> ::= ^ <Add Exp> LIKE StringLiteral
        <Pred Exp> ::= _ <Add Exp> IN <Tuple>                 <Pred Exp> ::= ^ <Add Exp> IN <Tuple>
        <Pred Exp> ::= _ <Add Exp> '=' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<>' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '!=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '!=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '>=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '<' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp>                            <Pred Exp> ::= ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NOT s 6
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 10
        <And Exp> g 11
        <Expression> g 53
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Not Exp> g 15
        <Pred Exp> g 16
        <Tuple> g 17
        <Value> g 18


State 35
        Prior States: 13, 41, 44

        <Mult Exp> ::= <Mult Exp> '*' _ <Negate Exp>          <Mult Exp> ::= <Mult Exp> '*' ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Negate Exp> g 54
        <Tuple> g 17
        <Value> g 42


State 36
        Prior States: 13, 41, 44

        <Mult Exp> ::= <Mult Exp> '/' _ <Negate Exp>          <Mult Exp> ::= <Mult Exp> '/' ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Negate Exp> g 55
        <Tuple> g 17
        <Value> g 42


State 37
        Prior States: 15

        <And Exp> ::= <Not Exp> AND _ <And Exp>               <And Exp> ::= <Not Exp> AND ^ <And Exp>
        <And Exp> ::= _ <Not Exp> AND <And Exp>               <And Exp> ::= ^ <Not Exp> AND <And Exp>
        <And Exp> ::= _ <Not Exp>                             <And Exp> ::= ^ <Not Exp>
        <Not Exp> ::= _ NOT <Pred Exp>                        <Not Exp> ::= ^ NOT <Pred Exp>
        <Not Exp> ::= _ <Pred Exp>                            <Not Exp> ::= ^ <Pred Exp>
        <Pred Exp> ::= _ <Value> IS NOT NULL                  <Pred Exp> ::= ^ <Value> IS NOT NULL
        <Pred Exp> ::= _ <Value> IS NULL                      <Pred Exp> ::= ^ <Value> IS NULL
        <Pred Exp> ::= _ <Add Exp> LIKE StringLiteral         <Pred Exp> ::= ^ <Add Exp> LIKE StringLiteral
        <Pred Exp> ::= _ <Add Exp> IN <Tuple>                 <Pred Exp> ::= ^ <Add Exp> IN <Tuple>
        <Pred Exp> ::= _ <Add Exp> '=' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<>' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '!=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '!=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '>=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '<' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp>                            <Pred Exp> ::= ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NOT s 6
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 10
        <And Exp> g 56
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Not Exp> g 15
        <Pred Exp> g 16
        <Tuple> g 17
        <Value> g 18


State 38
        Prior States: 18

        <Pred Exp> ::= <Value> IS _ NOT NULL                  <Pred Exp> ::= <Value> IS ^ NOT NULL
        <Pred Exp> ::= <Value> IS _ NULL                      <Pred Exp> ::= <Value> IS ^ NULL

        NOT s 57
        NULL s 58


State 39
        Prior States: 20

        <Tuple> ::= '(' <Expr List> ')' _                     <Tuple> ::= '(' <Expr List> ')' ^

        (EOF) r 33
        '-' r 33
        '!=' r 33
        ')' r 33
        '*' r 33
        ',' r 33
        '/' r 33
        '+' r 33
        '<' r 33
        '<=' r 33
        '<>' r 33
        '=' r 33
        '>' r 33
        '>=' r 33
        AND r 33
        IN r 33
        IS r 33
        LIKE r 33
        OR r 33


State 40
        Prior States: 21

        <Expr List> ::= <Expression> ',' _ <Expr List>        <Expr List> ::= <Expression> ',' ^ <Expr List>
        <Expression> ::= _ <And Exp> OR <Expression>          <Expression> ::= ^ <And Exp> OR <Expression>
        <Expression> ::= _ <And Exp>                          <Expression> ::= ^ <And Exp>
        <And Exp> ::= _ <Not Exp> AND <And Exp>               <And Exp> ::= ^ <Not Exp> AND <And Exp>
        <And Exp> ::= _ <Not Exp>                             <And Exp> ::= ^ <Not Exp>
        <Not Exp> ::= _ NOT <Pred Exp>                        <Not Exp> ::= ^ NOT <Pred Exp>
        <Not Exp> ::= _ <Pred Exp>                            <Not Exp> ::= ^ <Pred Exp>
        <Pred Exp> ::= _ <Value> IS NOT NULL                  <Pred Exp> ::= ^ <Value> IS NOT NULL
        <Pred Exp> ::= _ <Value> IS NULL                      <Pred Exp> ::= ^ <Value> IS NULL
        <Pred Exp> ::= _ <Add Exp> LIKE StringLiteral         <Pred Exp> ::= ^ <Add Exp> LIKE StringLiteral
        <Pred Exp> ::= _ <Add Exp> IN <Tuple>                 <Pred Exp> ::= ^ <Add Exp> IN <Tuple>
        <Pred Exp> ::= _ <Add Exp> '=' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<>' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '!=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '!=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '>' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '>=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '>=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<' <Add Exp>              <Pred Exp> ::= ^ <Add Exp> '<' <Add Exp>
        <Pred Exp> ::= _ <Add Exp> '<=' <Add Exp>             <Pred Exp> ::= ^ <Add Exp> '<=' <Add Exp>
        <Pred Exp> ::= _ <Add Exp>                            <Pred Exp> ::= ^ <Add Exp>
        <Add Exp> ::= _ <Add Exp> '+' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '+' <Mult Exp>
        <Add Exp> ::= _ <Add Exp> '-' <Mult Exp>              <Add Exp> ::= ^ <Add Exp> '-' <Mult Exp>
        <Add Exp> ::= _ <Mult Exp>                            <Add Exp> ::= ^ <Mult Exp>
        <Mult Exp> ::= _ <Mult Exp> '*' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '*' <Negate Exp>
        <Mult Exp> ::= _ <Mult Exp> '/' <Negate Exp>          <Mult Exp> ::= ^ <Mult Exp> '/' <Negate Exp>
        <Mult Exp> ::= _ <Negate Exp>                         <Mult Exp> ::= ^ <Negate Exp>
        <Negate Exp> ::= _ '-' <Value>                        <Negate Exp> ::= ^ '-' <Value>
        <Negate Exp> ::= _ <Value>                            <Negate Exp> ::= ^ <Value>
        <Value> ::= _ <Tuple>                                 <Value> ::= ^ <Tuple>
        <Value> ::= _ Id                                      <Value> ::= ^ Id
        <Value> ::= _ IntegerLiteral                          <Value> ::= ^ IntegerLiteral
        <Value> ::= _ RealLiteral                             <Value> ::= ^ RealLiteral
        <Value> ::= _ StringLiteral                           <Value> ::= ^ StringLiteral
        <Value> ::= _ BoolLiteral                             <Value> ::= ^ BoolLiteral
        <Value> ::= _ NULL                                    <Value> ::= ^ NULL
        <Tuple> ::= _ '(' <Expr List> ')'                     <Tuple> ::= ^ '(' <Expr List> ')'
        <Expr List> ::= _ <Expression> ',' <Expr List>        <Expr List> ::= ^ <Expression> ',' <Expr List>
        <Expr List> ::= _ <Expression>                        <Expr List> ::= ^ <Expression>

        '-' s 1
        '(' s 2
        BoolLiteral s 3
        Id s 4
        IntegerLiteral s 5
        NOT s 6
        NULL s 7
        RealLiteral s 8
        StringLiteral s 9
        <Add Exp> g 10
        <And Exp> g 11
        <Expr List> g 59
        <Expression> g 21
        <Mult Exp> g 13
        <Negate Exp> g 14
        <Not Exp> g 15
        <Pred Exp> g 16
        <Tuple> g 17
        <Value> g 18


State 41
        Prior States: 23

        <Add Exp> ::= <Add Exp> '-' <Mult Exp> _              <Add Exp> ::= <Add Exp> '-' <Mult Exp> ^
        <Mult Exp> ::= <Mult Exp> _ '*' <Negate Exp>          <Mult Exp> ::= <Mult Exp> ^ '*' <Negate Exp>
        <Mult Exp> ::= <Mult Exp> _ '/' <Negate Exp>          <Mult Exp> ::= <Mult Exp> ^ '/' <Negate Exp>

        '*' s 35
        '/' s 36
        (EOF) r 19
        '-' r 19
        '!=' r 19
        ')' r 19
        ',' r 19
        '+' r 19
        '<' r 19
        '<=' r 19
        '<>' r 19
        '=' r 19
        '>' r 19
        '>=' r 19
        AND r 19
        IN r 19
        LIKE r 19
        OR r 19


State 42
        Prior States: 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36

        <Negate Exp> ::= <Value> _                            <Negate Exp> ::= <Value> ^

        (EOF) r 25
        '-' r 25
        '!=' r 25
        ')' r 25
        '*' r 25
        ',' r 25
        '/' r 25
        '+' r 25
        '<' r 25
        '<=' r 25
        '<>' r 25
        '=' r 25
        '>' r 25
        '>=' r 25
        AND r 25
        IN r 25
        LIKE r 25
        OR r 25


State 43
        Prior States: 24

        <Pred Exp> ::= <Add Exp> '!=' <Add Exp> _             <Pred Exp> ::= <Add Exp> '!=' <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '+' s 25
        (EOF) r 12
        ')' r 12
        ',' r 12
        AND r 12
        OR r 12


State 44
        Prior States: 25

        <Add Exp> ::= <Add Exp> '+' <Mult Exp> _              <Add Exp> ::= <Add Exp> '+' <Mult Exp> ^
        <Mult Exp> ::= <Mult Exp> _ '*' <Negate Exp>          <Mult Exp> ::= <Mult Exp> ^ '*' <Negate Exp>
        <Mult Exp> ::= <Mult Exp> _ '/' <Negate Exp>          <Mult Exp> ::= <Mult Exp> ^ '/' <Negate Exp>

        '*' s 35
        '/' s 36
        (EOF) r 18
        '-' r 18
        '!=' r 18
        ')' r 18
        ',' r 18
        '+' r 18
        '<' r 18
        '<=' r 18
        '<>' r 18
        '=' r 18
        '>' r 18
        '>=' r 18
        AND r 18
        IN r 18
        LIKE r 18
        OR r 18


State 45
        Prior States: 26

        <Pred Exp> ::= <Add Exp> '<' <Add Exp> _              <Pred Exp> ::= <Add Exp> '<' <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '+' s 25
        (EOF) r 15
        ')' r 15
        ',' r 15
        AND r 15
        OR r 15


State 46
        Prior States: 27

        <Pred Exp> ::= <Add Exp> '<=' <Add Exp> _             <Pred Exp> ::= <Add Exp> '<=' <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '+' s 25
        (EOF) r 16
        ')' r 16
        ',' r 16
        AND r 16
        OR r 16


State 47
        Prior States: 28

        <Pred Exp> ::= <Add Exp> '<>' <Add Exp> _             <Pred Exp> ::= <Add Exp> '<>' <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '+' s 25
        (EOF) r 11
        ')' r 11
        ',' r 11
        AND r 11
        OR r 11


State 48
        Prior States: 29

        <Pred Exp> ::= <Add Exp> '=' <Add Exp> _              <Pred Exp> ::= <Add Exp> '=' <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '+' s 25
        (EOF) r 10
        ')' r 10
        ',' r 10
        AND r 10
        OR r 10


State 49
        Prior States: 30

        <Pred Exp> ::= <Add Exp> '>' <Add Exp> _              <Pred Exp> ::= <Add Exp> '>' <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '+' s 25
        (EOF) r 13
        ')' r 13
        ',' r 13
        AND r 13
        OR r 13


State 50
        Prior States: 31

        <Pred Exp> ::= <Add Exp> '>=' <Add Exp> _             <Pred Exp> ::= <Add Exp> '>=' <Add Exp> ^
        <Add Exp> ::= <Add Exp> _ '+' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '+' <Mult Exp>
        <Add Exp> ::= <Add Exp> _ '-' <Mult Exp>              <Add Exp> ::= <Add Exp> ^ '-' <Mult Exp>

        '-' s 23
        '+' s 25
        (EOF) r 14
        ')' r 14
        ',' r 14
        AND r 14
        OR r 14


State 51
        Prior States: 32

        <Pred Exp> ::= <Add Exp> IN <Tuple> _                 <Pred Exp> ::= <Add Exp> IN <Tuple> ^

        (EOF) r 9
        ')' r 9
        ',' r 9
        AND r 9
        OR r 9


State 52
        Prior States: 33

        <Pred Exp> ::= <Add Exp> LIKE StringLiteral _         <Pred Exp> ::= <Add Exp> LIKE StringLiteral ^

        (EOF) r 8
        ')' r 8
        ',' r 8
        AND r 8
        OR r 8


State 53
        Prior States: 34

        <Expression> ::= <And Exp> OR <Expression> _          <Expression> ::= <And Exp> OR <Expression> ^

        (EOF) r 0
        ')' r 0
        ',' r 0


State 54
        Prior States: 35

        <Mult Exp> ::= <Mult Exp> '*' <Negate Exp> _          <Mult Exp> ::= <Mult Exp> '*' <Negate Exp> ^

        (EOF) r 21
        '-' r 21
        '!=' r 21
        ')' r 21
        '*' r 21
        ',' r 21
        '/' r 21
        '+' r 21
        '<' r 21
        '<=' r 21
        '<>' r 21
        '=' r 21
        '>' r 21
        '>=' r 21
        AND r 21
        IN r 21
        LIKE r 21
        OR r 21


State 55
        Prior States: 36

        <Mult Exp> ::= <Mult Exp> '/' <Negate Exp> _          <Mult Exp> ::= <Mult Exp> '/' <Negate Exp> ^

        (EOF) r 22
        '-' r 22
        '!=' r 22
        ')' r 22
        '*' r 22
        ',' r 22
        '/' r 22
        '+' r 22
        '<' r 22
        '<=' r 22
        '<>' r 22
        '=' r 22
        '>' r 22
        '>=' r 22
        AND r 22
        IN r 22
        LIKE r 22
        OR r 22


State 56
        Prior States: 37

        <And Exp> ::= <Not Exp> AND <And Exp> _               <And Exp> ::= <Not Exp> AND <And Exp> ^

        (EOF) r 2
        ')' r 2
        ',' r 2
        OR r 2


State 57
        Prior States: 38

        <Pred Exp> ::= <Value> IS NOT _ NULL                  <Pred Exp> ::= <Value> IS NOT ^ NULL

        NULL s 60


State 58
        Prior States: 38

        <Pred Exp> ::= <Value> IS NULL _                      <Pred Exp> ::= <Value> IS NULL ^

        (EOF) r 7
        ')' r 7
        ',' r 7
        AND r 7
        OR r 7


State 59
        Prior States: 40

        <Expr List> ::= <Expression> ',' <Expr List> _        <Expr List> ::= <Expression> ',' <Expr List> ^

        ')' r 34


State 60
        Prior States: 57

        <Pred Exp> ::= <Value> IS NOT NULL _                  <Pred Exp> ::= <Value> IS NOT NULL ^

        (EOF) r 6
        ')' r 6
        ',' r 6
        AND r 6
        OR r 6




========================================
System Log
========================================

Grammar        Success           The grammar was successfully analyzed
LALR States    Success           LALR Table was succesfully created
DFA States     Success           The DFA State Table was successfully created
System         Success           The grammar was successfully analyzed and tables were created.


